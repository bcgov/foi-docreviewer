# ---------- Build Stage ----------
    FROM golang:1.23.3-alpine AS builder

    WORKDIR /app
    
    COPY go.mod go.sum ./
    RUN go mod download
    
    COPY . .
    RUN go build -o compression-service .
    
    # ---------- Final Image ----------
    FROM alpine:3.21
    
    RUN apk --no-cache add ca-certificates ghostscript
    
    WORKDIR /root/
    
    # Copy the binary from builder stage
    COPY --from=builder /app/compression-service .

    # Make sure itâ€™s executable
    RUN chmod +x ./compression-service

    # Copy .env to the container
    COPY .env .env

    # COPY .env /app/.env

    RUN chmod +x ./compression-service
    RUN chmod 644 .env
    
    # ENTRYPOINT ["/entrypoint.sh"]
    
    CMD ["./compression-service"]
    




# FROM python:3.10.8

# # Keeps Python from generating .pyc files in the container
# ENV PYTHONDONTWRITEBYTECODE=1

# # Turns off buffering for easier container logging
# ENV PYTHONUNBUFFERED=1

# RUN useradd --create-home --shell /bin/bash app_user
# WORKDIR /home/app_user
# COPY requirements.txt ./
# RUN apt-get update \
#     && apt-get -y install libpq-dev gcc \
#     && pip install psycopg2
# RUN pip install --no-cache-dir -r requirements.txt
# USER app_user
# COPY . .
# ENTRYPOINT ["/bin/sh", "./entrypoint.sh"]

version: '3'
services:
  foi-docreviewer-web:
    container_name: foi-docreviewer-web
    build:
      context: ./web/
      dockerfile: Dockerfile.local
      args:
        - NODE_ENV=${NODE_ENV:-development}
        - GENERATE_SOURCEMAP=false
        - REACT_APP_KEYCLOAK_CLIENT=${KEYCLOAK_WEB_CLIENTID:-foi-document-redaction}
        - REACT_APP_KEYCLOAK_URL_REALM=${KEYCLOAK_URL_REALM:-5k8dbl4h}
        - REACT_APP_KEYCLOAK_URL=${KEYCLOAK_URL}
        - FOI_DOCREVIEWER_BASE_API_URL=${FOI_DOCREVIEWER_BASE_API_URL}
        - REACT_APP_FOI_BASE_API_URL=${REACT_APP_FOI_BASE_API_URL}
    volumes:
      - ".:/web"
      - "/web/node_modules"
    ports:
      - "3006:8080"
    tty: true

  foiredis:
    image: redis:4.0
    container_name: foi_docreviewer_redis
    ports:
      - "16379:6379"

  foi-docreviewer-api:
    container_name: foi_docreviewer_api
    build:
      context: ./api
      dockerfile: dockerfile.local
    image: docreviewerapiimage
    depends_on:
      - foi-docreviewer-db
    networks:
      services-network:
        aliases:
          - backendapi
    ports:
      - 15500:5000
    environment:
      - DATABASE_USERNAME=${FOI_DATABASE_USERNAME}
      - DATABASE_PASSWORD=${FOI_DATABASE_PASSWORD}
      - DATABASE_NAME=${FOI_DATABASE_NAME}
      - DATABASE_HOST=${FOI_DATABASE_HOST}
      - DATABASE_PORT=${FOI_DATABASE_PORT}
      - FLASK_ENV:production
      - FOI_DOCREVIEWER_REDISHOST=${WEBSOCKET_BROKER_HOST}
      - FOI_DOCREVIEWER_REDISPORT=${WEBSOCKET_BROKER_PORT}
      - FOI_DOCREVIEWER_REDISPASSWORD=${WEBSOCKET_BROKER_PASSCODE}
      - FOI_DOCREVIEWER_REDISCHANNEL=${WEBSOCKET_FOI_RAWREQUEST_TOPIC}
      - KEYCLOAK_ADMIN_HOST=${KEYCLOAK_URL}
      - KEYCLOAK_ADMIN_REALM=${KEYCLOAK_URL_REALM}
      - KEYCLOAK_ADMIN_CLIENT_ID=foi-lob-api
      - KEYCLOAK_ADMIN_CLIENT_SECRET=${KEYCLOAK_ADMIN_CLIENT_SECRET}
      - KEYCLOAK_ADMIN_SRVACCOUNT=foisrcaccount
      - KEYCLOAK_ADMIN_SRVPASSWORD=${KEYCLOAK_ADMIN_SRVPASSWORD}
      - KEYCLOAK_ADMIN_INTAKE_GROUPID=${KEYCLOAK_ADMIN_INTAKE_GROUPID}
      - JWT_OIDC_AUDIENCE=${JWT_OIDC_AUDIENCE}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - JWT_OIDC_WELL_KNOWN_CONFIG=${KEYCLOAK_URL}/auth/realms/${KEYCLOAK_URL_REALM}/.well-known/openid-configuration
      - JWT_OIDC_ALGORITHMS=RS256
      - JWT_OIDC_JWKS_URI=${KEYCLOAK_URL}/auth/realms/${KEYCLOAK_URL_REALM}/protocol/openid-connect/certs
      - JWT_OIDC_ISSUER=${KEYCLOAK_URL}/auth/realms/${KEYCLOAK_URL_REALM}
      - JWT_OIDC_CACHING_ENABLED=True
      - JWT_OIDC_JWKS_CACHE_TIMEOUT=300
      - CACHE_TIMEOUT=${CACHE_TIMEOUT}
      - FOI_DOCREVIEWER_REDISURL=${FOI_DOCREVIEWER_REDISURL}
      - CACHE_ENABLED=${CACHE_ENABLED}
      - OSS_S3_FORMS_BUCKET=${OSS_S3_FORMS_BUCKET}
      - OSS_S3_FORMS_ACCESS_KEY_ID=${OSS_S3_FORMS_ACCESS_KEY_ID}
      - OSS_S3_FORMS_SECRET_ACCESS_KEY=${OSS_S3_FORMS_SECRET_ACCESS_KEY}
      - OSS_S3_HOST=${OSS_S3_HOST}
      - OSS_S3_REGION=${OSS_S3_REGION}
      - OSS_S3_SERVICE=${OSS_S3_SERVICE}
      - CACHE_REDISURL=${CACHE_REDISURL}
      - FOI_FFA_URL=${FOI_FFA_URL}
      - EMAIL_SERVER_IMAP=${EMAIL_SERVER_IMAP}
      - EMAIL_SERVER_SMTP=${EMAIL_SERVER_SMTP}
      - EMAIL_SERVER_SMTP_PORT=${EMAIL_SERVER_SMTP_PORT}
      - EMAIL_SRUSERID=${EMAIL_SRUSERID}
      - EMAIL_SRPWD=${EMAIL_SRPWD}
      - EMAIL_SENDER_ADDRESS=${EMAIL_SENDER_ADDRESS}
      - EMAIL_FOLDER_OUTBOX=${EMAIL_FOLDER_OUTBOX}
      - EMAIL_FOLDER_INBOX=${EMAIL_FOLDER_INBOX}

  foi-docreviewer-db:
    image: postgres
    container_name: foi_docreviewer_db
    ports:
      - "25432:5432"
    environment:
      - POSTGRES_USER=${FOI_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${FOI_DATABASE_PASSWORD}
    networks:
      services-network:
        aliases:
          - db

  foi-docreviewer-dedupe:
    container_name: foi-docreviewer-dedupe
    build:
      context: ./computingservices/DedupeServices
      dockerfile: Dockerfile.local
    image: docreviewerdedupeimage
    stdin_open: true
    tty: true
    networks:
      services-network:
        aliases:
          - docreviewerdedupe     
    environment:
      - REDIS_HOST=${DEDUPE_REDIS_HOST}
      - REDIS_PASSWORD=${DEDUPE_REDIS_PASSWORD}
      - REDIS_PORT=${DEDUPE_REDIS_PORT}
      - DEDUPE_STREAM_KEY=${DEDUPE_STREAM_KEY}

volumes:
  dbdata:
networks:
  services-network:
    driver: bridge

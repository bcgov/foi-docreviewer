version: '3'
services:
  foi-docreviewer-web:
    container_name: foi-docreviewer-web
    build:
      context: ./web/
      dockerfile: Dockerfile.local
      args:
        - NODE_ENV=${NODE_ENV:-development}
        - GENERATE_SOURCEMAP=false
        - REACT_APP_KEYCLOAK_CLIENT=${KEYCLOAK_WEB_CLIENTID:-foi-document-redaction}
        - REACT_APP_KEYCLOAK_URL_REALM=${KEYCLOAK_URL_REALM:-5k8dbl4h}
        - REACT_APP_KEYCLOAK_URL=${KEYCLOAK_URL}
        - FOI_DOCREVIEWER_BASE_API_URL=${FOI_DOCREVIEWER_BASE_API_URL}
        - REACT_APP_PDFVIEWERDISABLED=${REACT_APP_PDFVIEWERDISABLED}
    volumes:
      - ".:/web"
      - "/web/node_modules"
    ports:
      - "3006:8080"
    tty: true

  foi-docreviewer-redis:
    image: redis:5.0.14
    container_name: aot_foi_docreviewer_redis
    ports:
      - "7379:6379"

  foi-docreviewer-api:
    container_name: foi_docreviewer_api
    build:
      context: ./api
      dockerfile: dockerfile.local
    image: docreviewerapiimage
    depends_on:
      - foi-docreviewer-db
    networks:
      services-network:
        aliases:
          - backendapi
    ports:
      - 15500:5000
    environment:
      - DATABASE_USERNAME=${FOI_DATABASE_USERNAME}
      - DATABASE_PASSWORD=${FOI_DATABASE_PASSWORD}
      - DATABASE_NAME=${FOI_DATABASE_NAME}
      - DATABASE_HOST=${FOI_DATABASE_HOST}
      - DATABASE_PORT=${FOI_DATABASE_PORT}
      - FLASK_ENV:production
      - JWT_OIDC_AUDIENCE=${JWT_OIDC_AUDIENCE}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - JWT_OIDC_WELL_KNOWN_CONFIG=${KEYCLOAK_URL}/auth/realms/${KEYCLOAK_URL_REALM}/.well-known/openid-configuration
      - JWT_OIDC_ALGORITHMS=RS256
      - JWT_OIDC_JWKS_URI=${KEYCLOAK_URL}/auth/realms/${KEYCLOAK_URL_REALM}/protocol/openid-connect/certs
      - JWT_OIDC_ISSUER=${KEYCLOAK_URL}/auth/realms/${KEYCLOAK_URL_REALM}
      - JWT_OIDC_CACHING_ENABLED=True
      - JWT_OIDC_JWKS_CACHE_TIMEOUT=${JWT_OIDC_JWKS_CACHE_TIMEOUT}
      - CACHE_TIMEOUT=${CACHE_TIMEOUT}
      - FOI_DOCREVIEWER_REDISURL=${FOI_DOCREVIEWER_REDISURL}
      - FOI_REQ_MANAGEMENT_API_URL=${FOI_REQ_MANAGEMENT_API_URL}
      - FOI_REQ_MANAGEMENT_API_TIMEOUT=${FOI_REQ_MANAGEMENT_API_TIMEOUT}
      - OSS_S3_HOST=${OSS_S3_HOST}
      - OSS_S3_REGION=${OSS_S3_REGION}
      - OSS_S3_SERVICE=${OSS_S3_SERVICE}
      - DEDUPE_S3_ENV=${DEDUPE_S3_ENV}
      - DEDUPE_STREAM_KEY=${DEDUPE_STREAM_KEY}
      - FILE_CONVERSION_STREAM_KEY=${FILE_CONVERSION_STREAM_KEY}
      - FOI_RECORD_FORMATS=${FOI_RECORD_FORMATS}

  foi-docreviewer-db:
    image: postgres
    container_name: foi_docreviewer_db
    ports:
      - "25432:5432"
    environment:
      - POSTGRES_USER=${FOI_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${FOI_DATABASE_PASSWORD}
    networks:
      services-network:
        aliases:
          - db   
  
  foi-s3-fileconversion:
    container_name: foi-s3-fileconversion
    depends_on:
      - foi-docreviewer-db
      - foi-docreviewer-redis
    build:
      context: ./MCS.FOI.S3FileConversion/
      dockerfile: Dockerfile.local
    environment:
      - DATABASE_USERNAME=${FOI_DATABASE_USERNAME}
      - DATABASE_PASSWORD=${FOI_DATABASE_PASSWORD}
      - DATABASE_NAME=${FOI_DATABASE_NAME}
      - DATABASE_HOST=${FOI_DATABASE_HOST}
      - DATABASE_PORT=${FOI_DATABASE_PORT}
      - S3_HOST=${DEDUPE_S3_HOST}
      - S3_REGION=${OSS_S3_REGION}
      - S3_SERVICE=${OSS_S3_SERVICE}
      - REDIS_STREAM_HOST=${DEDUPE_REDIS_HOST}
      - REDIS_STREAM_PASSWORD=${DEDUPE_REDIS_PASSWORD}
      - REDIS_STREAM_PORT=${DEDUPE_REDIS_PORT}
      - REDIS_STREAM_KEY=${FILE_CONVERSION_STREAM_KEY}
      - REDIS_STREAM_CONSUMER_GROUP=${FILE_CONVERSION_STREAM_CONSUMER_GROUP}
      - DEDUPE_STREAM_KEY=${DEDUPE_STREAM_KEY}
      - RECORD_FORMATS=${FOI_RECORD_FORMATS}
      - FILE_CONVERSION_SYNCFUSIONKEY=${FILE_CONVERSION_SYNCFUSIONKEY}
      - FILE_CONVERSION_FAILTUREATTEMPT=${FILE_CONVERSION_FAILTUREATTEMPT}
      - FILE_CONVERSION_WAITTIME=${FILE_CONVERSION_WAITTIME}
    networks:
      - services-network


  foi-docreviewer-dedupe:
    container_name: foi-docreviewer-dedupe
    depends_on:
      - foi-docreviewer-db
      - foi-docreviewer-redis
    build:
      context: ./computingservices/DedupeServices
      dockerfile: Dockerfile.local
    image: docreviewerdedupeimage
    stdin_open: true
    tty: true
    networks:
      services-network:
        aliases:
          - docreviewerdedupe     
    environment:
      - REDIS_HOST=${DEDUPE_REDIS_HOST}
      - REDIS_PASSWORD=${DEDUPE_REDIS_PASSWORD}
      - REDIS_PORT=${DEDUPE_REDIS_PORT}
      - DEDUPE_STREAM_KEY=${DEDUPE_STREAM_KEY}
      - DEDUPE_S3_ENV=${DEDUPE_S3_ENV}
      - DEDUPE_DB_HOST=${DEDUPE_DB_HOST}
      - DEDUPE_DB_NAME=${DEDUPE_DB_NAME}
      - DEDUPE_DB_PORT=${DEDUPE_DB_PORT}
      - DEDUPE_DB_USER=${DEDUPE_DB_USER}
      - DEDUPE_DB_PASSWORD=${DEDUPE_DB_PASSWORD}
      - DEDUPE_S3_HOST=${DEDUPE_S3_HOST}
      - DEDUPE_S3_REGION=${DEDUPE_S3_REGION}
      - DEDUPE_S3_SERVICE=${DEDUPE_S3_SERVICE}
      - DEDUPE_REQUEST_MANAGEMENT_API=${DEDUPE_REQUEST_MANAGEMENT_API}
      - NOTIFICATION_STREAM_KEY=${NOTIFICATION_STREAM_KEY}

  foi-docreviewer-pdfstitch:
      container_name: foi-docreviewer-pdfstitch
      depends_on:
        - foi-docreviewer-db
        - foi-docreviewer-redis
      build:
        context: ./computingservices/PDFStitchServices
        dockerfile: Dockerfile.local
      image: docreviewerpdfstitchimage
      stdin_open: true
      tty: true
      networks:
        services-network:
          aliases:
            - docreviewerdedupe     
      environment:
        - REDIS_HOST=${PDFSTITCH_REDIS_HOST}
        - REDIS_PASSWORD=${PDFSTITCH_REDIS_PASSWORD}
        - REDIS_PORT=${PDFSTITCH_REDIS_PORT}
        - NOTIFICATION_REDIS_HOST=${PDFSTITCH_REDIS_HOST}
        - NOTIFICATION_REDIS_PASSWORD=${PDFSTITCH_REDIS_PASSWORD}
        - NOTIFICATION_REDIS_PORT=${PDFSTITCH_REDIS_PORT}
        - DIVISION_PDF_STITCH_STREAM_KEY=${DIVISION_PDF_STITCH_STREAM_KEY}
        - DIVISION_BLOB_STITCH_STREAM_KEY=${DIVISION_BLOB_STITCH_STREAM_KEY}
        - PDFSTITCH_S3_ENV=${PDFSTITCH_S3_ENV}
        - PDFSTITCH_DB_HOST=${PDFSTITCH_DB_HOST}
        - PDFSTITCH_DB_NAME=${PDFSTITCH_DB_NAME}
        - PDFSTITCH_DB_PORT=${PDFSTITCH_DB_PORT}
        - PDFSTITCH_DB_USER=${PDFSTITCH_DB_USER}
        - PDFSTITCH_DB_PASSWORD=${PDFSTITCH_DB_PASSWORD}
        - PDFSTITCH_S3_HOST=${PDFSTITCH_S3_HOST}
        - PDFSTITCH_S3_REGION=${PDFSTITCH_S3_REGION}
        - PDFSTITCH_S3_SERVICE=${PDFSTITCH_S3_SERVICE}
        - NOTIFICATION_STREAM_KEY=${NOTIFICATION_STREAM_KEY}
        - DIVISION_STITCH_FOLDER_PATH=${DIVISION_STITCH_FOLDER_PATH}
        - PDF_STITCH_FAILUREATTEMPT=${PDF_STITCH_FAILUREATTEMPT}
        - MESSAGE_BLOCK_TIME=${MESSAGE_BLOCK_TIME}
        - HEALTH_CHECK_INTERVAL=${HEALTH_CHECK_INTERVAL}
        - NUMBERING_ENABLED=${NUMBERING_ENABLED}
        - NOTIFICATION_ENABLED=${NOTIFICATION_ENABLED}

volumes:
  dbdata:
networks:
  services-network:
    driver: bridge
